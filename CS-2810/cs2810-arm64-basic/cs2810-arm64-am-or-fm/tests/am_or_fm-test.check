#include <inttypes.h>

extern int64_t am_or_fm(int64_t);
extern int64_t callfunction(int64_t);
extern int64_t (*target_function)(int64_t);
extern int64_t unsaved_register_number;

#suite alltests
#tcase simple

#test sum2test
    target_function = am_or_fm;

    // check with some valid AM values
    ck_assert_int_eq(callfunction(535), 1);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(536), 1);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(1000), 1);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(1604), 1);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(1605), 1);
    ck_assert_int_eq(unsaved_register_number, 0);

    // check with some valid FM values
    ck_assert_int_eq(callfunction(88), 2);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(89), 2);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(98), 2);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(107), 2);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(108), 2);
    ck_assert_int_eq(unsaved_register_number, 0);

    // check with some invalid values
    ck_assert_int_eq(callfunction(0), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(-1), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(-535), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(-88), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(534), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(1606), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(87), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(109), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(500), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(10000), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

    ck_assert_int_eq(callfunction(50), 0);
    ck_assert_int_eq(unsaved_register_number, 0);

#main-pre
    srunner_set_xml(sr, "test_results.xml");
